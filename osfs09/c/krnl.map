
分配公共符号
公共符号            大小              文件

idt_ptr             0x6               kernel/global.o
task_stack          0x38000           kernel/global.o
k_reenter           0x4               kernel/global.o
gdt                 0x400             kernel/global.o
tty_table           0xc30             kernel/global.o
tss                 0x68              kernel/global.o
nr_current_console  0x4               kernel/global.o
disp_pos            0x4               kernel/global.o
gdt_ptr             0x6               kernel/global.o
idt                 0x800             kernel/global.o
PARTITION_ENTRY     0x10              kernel/hd.o
ticks               0x4               kernel/global.o
console_table       0x30              kernel/global.o
irq_table           0x40              kernel/global.o
p_proc_ready        0x4               kernel/global.o
proc_table          0x428             kernel/global.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel/start.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/clock.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/tty.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/i8259.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/global.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/proc.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/systask.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/printf.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/vsprintf.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/klib.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/misc.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs/main.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

段 .text 的地址设置为 0x30400
LOAD kernel/kernel.o
LOAD kernel/syscall.o
LOAD kernel/start.o
LOAD kernel/main.o
LOAD kernel/clock.o
LOAD kernel/keyboard.o
LOAD kernel/tty.o
LOAD kernel/console.o
LOAD kernel/i8259.o
LOAD kernel/global.o
LOAD kernel/protect.o
LOAD kernel/proc.o
LOAD kernel/systask.o
LOAD kernel/hd.o
LOAD kernel/printf.o
LOAD kernel/vsprintf.o
LOAD lib/kliba.o
LOAD lib/klib.o
LOAD lib/string.o
LOAD lib/misc.o
LOAD fs/main.o
                0x0000000008048000                PROVIDE (__executable_start, 0x8048000)
                0x0000000008048094                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000000000000        0x0 kernel/kernel.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 .rel.data      0x0000000000000000        0x0 kernel/kernel.o
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                0x0000000008048094                PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000000000000        0x0 kernel/kernel.o
                0x0000000008048094                PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt            0x00000000080480a0        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000000000000        0x0 kernel/kernel.o

.text           0x0000000000030400     0x5221
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000030400      0x410 kernel/kernel.o
                0x0000000000030400                _start
                0x0000000000030440                hwint00
                0x0000000000030470                hwint01
                0x00000000000304a0                hwint02
                0x00000000000304d0                hwint03
                0x0000000000030500                hwint04
                0x0000000000030530                hwint05
                0x0000000000030560                hwint06
                0x0000000000030590                hwint07
                0x00000000000305c0                hwint08
                0x00000000000305f0                hwint09
                0x0000000000030620                hwint10
                0x0000000000030650                hwint11
                0x0000000000030680                hwint12
                0x00000000000306b0                hwint13
                0x00000000000306e0                hwint14
                0x0000000000030710                hwint15
                0x0000000000030734                divide_error
                0x000000000003073a                single_step_exception
                0x0000000000030740                nmi
                0x0000000000030746                breakpoint_exception
                0x000000000003074c                overflow
                0x0000000000030752                bounds_check
                0x0000000000030758                inval_opcode
                0x000000000003075e                copr_not_available
                0x0000000000030764                double_fault
                0x0000000000030768                copr_seg_overrun
                0x000000000003076e                inval_tss
                0x0000000000030772                segment_not_present
                0x0000000000030776                stack_exception
                0x000000000003077a                general_protection
                0x000000000003077e                page_fault
                0x0000000000030782                copr_error
                0x00000000000307cb                sys_call
                0x00000000000307eb                restart
 .text          0x0000000000030810       0x20 kernel/syscall.o
                0x0000000000030810                sendrec
                0x0000000000030824                printx
 .text          0x0000000000030830       0x8e kernel/start.o
                0x0000000000030830                cstart
 .text          0x00000000000308be      0x359 kernel/main.o
                0x00000000000308be                kernel_main
                0x0000000000030b4a                get_ticks
                0x0000000000030b82                TestA
                0x0000000000030b87                TestB
                0x0000000000030ba7                TestC
                0x0000000000030bc7                panic
 .text          0x0000000000030c17       0xde kernel/clock.o
                0x0000000000030c17                clock_handler
                0x0000000000030c58                milli_delay
                0x0000000000030c91                init_clock
 .text          0x0000000000030cf5      0x67d kernel/keyboard.o
                0x0000000000030cf5                keyboard_handler
                0x0000000000030d51                init_keyboard
                0x0000000000030df6                keyboard_read
 .text          0x0000000000031372      0x4fa kernel/tty.o
                0x0000000000031372                task_tty
                0x000000000003141c                in_process
                0x0000000000031671                tty_write
                0x00000000000316b5                sys_printx
 .text          0x000000000003186c      0x40b kernel/console.o
                0x000000000003186c                init_screen
                0x0000000000031988                is_current_console
                0x00000000000319a3                out_char
                0x0000000000031bdf                select_console
                0x0000000000031c10                scroll_screen
 .text          0x0000000000031c77      0x13c kernel/i8259.o
                0x0000000000031c77                init_8259A
                0x0000000000031d68                spurious_irq
                0x0000000000031d93                put_irq_handler
 .text          0x0000000000031db3        0x0 kernel/global.o
 .text          0x0000000000031db3      0x7e9 kernel/protect.o
                0x0000000000031db3                init_prot
                0x00000000000323b4                seg2phys
                0x000000000003246f                exception_handler
 .text          0x000000000003259c     0x1a12 kernel/proc.o
                0x000000000003259c                schedule
                0x0000000000032627                sys_sendrec
                0x0000000000032786                send_recv
                0x0000000000032866                ldt_seg_linear
                0x00000000000328b0                va2la
                0x000000000003291f                reset_msg
                0x00000000000338f2                inform_int
                0x0000000000033a94                dump_proc
                0x0000000000033e67                dump_msg
 .text          0x0000000000033fae       0x62 kernel/systask.o
                0x0000000000033fae                task_sys
 .text          0x0000000000034010      0xe9e kernel/hd.o
                0x0000000000034010                task_hd
                0x0000000000034e89                hd_handler
 .text          0x0000000000034eae       0x4f kernel/printf.o
                0x0000000000034eae                printf
 .text          0x0000000000034efd      0x318 kernel/vsprintf.o
                0x0000000000034f60                vsprintf
                0x00000000000351eb                sprintf
 *fill*         0x0000000000035215        0xb 
 .text          0x0000000000035220      0x19a lib/kliba.o
                0x0000000000035220                disp_str
                0x000000000003525e                disp_color_str
                0x000000000003529d                out_byte
                0x00000000000352a9                in_byte
                0x00000000000352b3                port_read
                0x00000000000352c6                port_write
                0x00000000000352d9                disable_irq
                0x000000000003530e                enable_irq
                0x000000000003532d                disable_int
                0x000000000003532f                enable_int
                0x0000000000035331                glitter
 .text          0x00000000000353ba      0x116 lib/klib.o
                0x00000000000353ba                itoa
                0x0000000000035465                disp_int
                0x000000000003548a                delay
 .text          0x00000000000354d0       0x78 lib/string.o
                0x00000000000354d0                memcpy
                0x00000000000354f9                memset
                0x000000000003551a                strcpy
                0x0000000000035532                strlen
 .text          0x0000000000035548       0x61 lib/misc.o
                0x0000000000035548                spin
                0x0000000000035563                assertion_failure
 .text          0x00000000000355a9       0x78 fs/main.o
                0x00000000000355a9                task_fs
 *(.gnu.warning)

.fini
 *(SORT(.fini))
                0x0000000000035621                PROVIDE (__etext, .)
                0x0000000000035621                PROVIDE (_etext, .)
                0x0000000000035621                PROVIDE (etext, .)

.rodata         0x0000000000035640      0xfa3
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x0000000000035640       0x47 kernel/start.o
 *fill*         0x0000000000035687        0x1 
 .rodata        0x0000000000035688       0x34 kernel/main.o
 .rodata        0x00000000000356bc       0x64 kernel/keyboard.o
 .rodata        0x0000000000035720       0x90 kernel/tty.o
 .rodata        0x00000000000357b0       0x11 kernel/i8259.o
 *fill*         0x00000000000357c1        0x3 
 .rodata        0x00000000000357c4        0x4 kernel/global.o
                0x00000000000357c4                FSBUF_SIZE
 *fill*         0x00000000000357c8       0x18 
 .rodata        0x00000000000357e0      0x540 kernel/protect.o
 .rodata        0x0000000000035d20      0x63e kernel/proc.o
 .rodata        0x000000000003635e       0x11 kernel/systask.o
 *fill*         0x000000000003636f        0x1 
 .rodata        0x0000000000036370      0x1ba kernel/hd.o
 *fill*         0x000000000003652a        0x2 
 .rodata        0x000000000003652c       0x61 lib/misc.o
 *fill*         0x000000000003658d        0x3 
 .rodata        0x0000000000036590       0x53 fs/main.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame       0x00000000000365e4      0xa84
 *(.eh_frame)
 .eh_frame      0x00000000000365e4       0x38 kernel/start.o
 .eh_frame      0x000000000003661c       0xb0 kernel/main.o
                                         0xc8 (size before relaxing)
 .eh_frame      0x00000000000366cc       0x60 kernel/clock.o
                                         0x78 (size before relaxing)
 .eh_frame      0x000000000003672c       0xe0 kernel/keyboard.o
                                         0xf8 (size before relaxing)
 .eh_frame      0x000000000003680c       0xfc kernel/tty.o
                                        0x114 (size before relaxing)
 .eh_frame      0x0000000000036908      0x100 kernel/console.o
                                        0x118 (size before relaxing)
 .eh_frame      0x0000000000036a08       0x60 kernel/i8259.o
                                         0x78 (size before relaxing)
 .eh_frame      0x0000000000036a68       0xb0 kernel/protect.o
                                         0xc8 (size before relaxing)
 .eh_frame      0x0000000000036b18      0x1e0 kernel/proc.o
                                        0x1f8 (size before relaxing)
 .eh_frame      0x0000000000036cf8       0x1c kernel/systask.o
                                         0x34 (size before relaxing)
 .eh_frame      0x0000000000036d14      0x210 kernel/hd.o
                                        0x228 (size before relaxing)
 .eh_frame      0x0000000000036f24       0x20 kernel/printf.o
                                         0x38 (size before relaxing)
 .eh_frame      0x0000000000036f44       0x68 kernel/vsprintf.o
                                         0x80 (size before relaxing)
 .eh_frame      0x0000000000036fac       0x60 lib/klib.o
                                         0x78 (size before relaxing)
 .eh_frame      0x000000000003700c       0x3c lib/misc.o
                                         0x54 (size before relaxing)
 .eh_frame      0x0000000000037048       0x20 fs/main.o
                                         0x38 (size before relaxing)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000037068                . = (ALIGN (0x1000) - ((0x1000 - .) & 0xfff))
                0x0000000000038068                . = DATA_SEGMENT_ALIGN (0x1000, 0x1000)

.eh_frame
 *(.eh_frame)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000038068        0x0
                0x0000000000038068                PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                0x0000000000038068                PROVIDE (__preinit_array_end, .)

.init_array     0x0000000000038068        0x0
                0x0000000000038068                PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                0x0000000000038068                PROVIDE (__init_array_end, .)

.fini_array     0x0000000000038068        0x0
                0x0000000000038068                PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                0x0000000000038068                PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x0000000000038068                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x0000000000038068        0x0
 *(.got.plt)
 *(.igot.plt)
 .igot.plt      0x0000000000000000        0x0 kernel/kernel.o

.data           0x0000000000038080      0x760
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000038080        0x2 kernel/kernel.o
 .data          0x0000000000038082        0x0 kernel/start.o
 .data          0x0000000000038082        0x0 kernel/main.o
 .data          0x0000000000038082        0x0 kernel/clock.o
 *fill*         0x0000000000038082       0x1e 
 .data          0x00000000000380a0      0x600 kernel/keyboard.o
                0x00000000000380a0                keymap
 .data          0x00000000000386a0        0x0 kernel/tty.o
 .data          0x00000000000386a0        0x0 kernel/console.o
 .data          0x00000000000386a0        0x0 kernel/i8259.o
 .data          0x00000000000386a0      0x140 kernel/global.o
                0x00000000000386a0                task_table
                0x0000000000038740                user_proc_table
                0x00000000000387b8                sys_call_table
                0x00000000000387c4                dd_map
                0x00000000000387dc                fsbuf
 .data          0x00000000000387e0        0x0 kernel/protect.o
 .data          0x00000000000387e0        0x0 kernel/proc.o
 .data          0x00000000000387e0        0x0 kernel/systask.o
 .data          0x00000000000387e0        0x0 kernel/hd.o
 .data          0x00000000000387e0        0x0 kernel/printf.o
 .data          0x00000000000387e0        0x0 kernel/vsprintf.o
 .data          0x00000000000387e0        0x0 lib/klib.o
 .data          0x00000000000387e0        0x0 lib/misc.o
 .data          0x00000000000387e0        0x0 fs/main.o

.data1
 *(.data1)
                0x00000000000387e0                _edata = .
                0x00000000000387e0                PROVIDE (edata, .)
                0x00000000000387e0                . = .
                0x00000000000387e0                __bss_start = .

.bss            0x00000000000387e0    0x3acb8
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000000387e0      0x800 kernel/kernel.o
 .bss           0x0000000000038fe0        0x0 kernel/start.o
 .bss           0x0000000000038fe0        0x0 kernel/main.o
 .bss           0x0000000000038fe0        0x0 kernel/clock.o
 .bss           0x0000000000038fe0       0x58 kernel/keyboard.o
 .bss           0x0000000000039038        0x0 kernel/tty.o
 .bss           0x0000000000039038        0x0 kernel/console.o
 .bss           0x0000000000039038        0x0 kernel/i8259.o
 .bss           0x0000000000039038        0x0 kernel/global.o
 .bss           0x0000000000039038        0x0 kernel/protect.o
 .bss           0x0000000000039038        0x0 kernel/proc.o
 .bss           0x0000000000039038        0x0 kernel/systask.o
 *fill*         0x0000000000039038        0x8 
 .bss           0x0000000000039040      0x64c kernel/hd.o
 .bss           0x000000000003968c        0x0 kernel/printf.o
 .bss           0x000000000003968c        0x0 kernel/vsprintf.o
 .bss           0x000000000003968c        0x0 lib/klib.o
 .bss           0x000000000003968c        0x0 lib/misc.o
 .bss           0x000000000003968c        0x0 fs/main.o
 *(COMMON)
 *fill*         0x000000000003968c       0x14 
 COMMON         0x00000000000396a0    0x39de8 kernel/global.o
                0x00000000000396a0                idt_ptr
                0x00000000000396c0                task_stack
                0x00000000000716c0                k_reenter
                0x00000000000716e0                gdt
                0x0000000000071ae0                tty_table
                0x0000000000072720                tss
                0x0000000000072788                nr_current_console
                0x000000000007278c                disp_pos
                0x0000000000072790                gdt_ptr
                0x00000000000727a0                idt
                0x0000000000072fa0                ticks
                0x0000000000072fc0                console_table
                0x0000000000073000                irq_table
                0x0000000000073040                p_proc_ready
                0x0000000000073060                proc_table
 COMMON         0x0000000000073488       0x10 kernel/hd.o
                0x0000000000073488                PARTITION_ENTRY
                0x0000000000073498                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000073498                . = ALIGN (0x4)
                0x0000000000073498                . = SEGMENT_START ("ldata-segment", .)
                0x0000000000073498                . = ALIGN (0x4)
                0x0000000000073498                _end = .
                0x0000000000073498                PROVIDE (end, .)
                0x0000000000073498                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2b
 *(.comment)
 .comment       0x0000000000000000       0x2b kernel/start.o
                                         0x2c (size before relaxing)
 .comment       0x0000000000000000       0x2c kernel/main.o
 .comment       0x0000000000000000       0x2c kernel/clock.o
 .comment       0x0000000000000000       0x2c kernel/keyboard.o
 .comment       0x0000000000000000       0x2c kernel/tty.o
 .comment       0x0000000000000000       0x2c kernel/console.o
 .comment       0x0000000000000000       0x2c kernel/i8259.o
 .comment       0x0000000000000000       0x2c kernel/global.o
 .comment       0x0000000000000000       0x2c kernel/protect.o
 .comment       0x0000000000000000       0x2c kernel/proc.o
 .comment       0x0000000000000000       0x2c kernel/systask.o
 .comment       0x0000000000000000       0x2c kernel/hd.o
 .comment       0x0000000000000000       0x2c kernel/printf.o
 .comment       0x0000000000000000       0x2c kernel/vsprintf.o
 .comment       0x0000000000000000       0x2c lib/klib.o
 .comment       0x0000000000000000       0x2c lib/misc.o
 .comment       0x0000000000000000       0x2c fs/main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
